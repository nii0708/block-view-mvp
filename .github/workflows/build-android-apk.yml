name: Build Android APK (Local)

on:
  push:
    branches: [main]
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📱 Checkout repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🏗 Setup EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🔧 Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: 📱 Install required Android components
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "platform-tools" \
            "cmdline-tools;latest"

      # Debug environment variables
      - name: 🔍 Debug Environment Variables
        run: |
          echo "🔍 Checking EAS environment variables..."
          eas env:list --scope project
          echo "🔍 Node version: $(node --version)"
          echo "🔍 NPM version: $(npm --version)"

      - name: 🚀 Build APK (Local)
        run: |
          echo "🚀 Starting local build for APK at $(date)"
          echo "📋 Using EAS Environment Variables for Supabase config"
          
          # Build dengan clear cache
          eas build --local \
            --platform android \
            --profile preview \
            --output mine.lite.apk \
            --non-interactive \
            --clear-cache
        env:
          # Explicitly set environment variables sebagai fallback
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: 📤 Upload APK as GitHub Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: mine-lite-apk-${{ github.run_number }}
          path: mine.lite.apk

      - name: 📝 Create build summary
        if: success()
        run: |
          APK_SIZE=$(du -h mine.lite.apk | cut -f1)
          echo "## Android APK Local Build Completed ✅" >> $GITHUB_STEP_SUMMARY
          echo "**APK Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "**Build #:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
          echo "**Download:** Check Artifacts section in this workflow run" >> $GITHUB_STEP_SUMMARY