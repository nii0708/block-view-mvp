name: Build Android APK & AAB (Local)
on:
  push:
    branches: [main]
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📱 Checkout repository
        uses: actions/checkout@v4
        
      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm
          
      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          
      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: 📦 Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: 🏗 Setup EAS CLI
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          
      - name: 🔧 Accept Android SDK licenses
        run: yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
      - name: 📱 Install required Android components
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "platform-tools" \
            "cmdline-tools;latest"
            
      # Debug environment variables
      - name: 🔍 Debug Environment Variables
        run: |
          echo "🔍 Node version: $(node --version)"
          echo "🔍 NPM version: $(npm --version)"
          echo "🔍 EAS CLI version: $(eas --version)"
          echo "🔍 Build type: ${{ github.event.inputs.build_type || 'both' }}"
          echo "🔍 Environment check completed"
          
      # Build APK
      - name: 🚀 Build APK (Local)
        if: github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == ''
        run: |
          echo "🚀 Starting local APK build at $(date)"
          echo "📋 Using EAS Environment Variables for Supabase config"
          
          # Build APK with clear cache
          eas build --local \
            --platform android \
            --profile preview \
            --output mine.lite.apk \
            --non-interactive \
            --clear-cache
        env:
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}
          
      # Build AAB (Android App Bundle)
      - name: 🎯 Build AAB (Local)
        if: github.event.inputs.build_type == 'aab' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == ''
        run: |
          echo "🎯 Starting local AAB build at $(date)"
          echo "📋 Building Android App Bundle for Google Play Store"
          
          # Build AAB with clear cache
          eas build --local \
            --platform android \
            --profile production \
            --output mine.lite.aab \
            --non-interactive \
            --clear-cache
        env:
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}
          
      # Upload APK as GitHub Artifact
      - name: 📤 Upload APK as GitHub Artifact
        if: success() && (github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '') && hashFiles('mine.lite.apk') != ''
        uses: actions/upload-artifact@v4
        with:
          name: mine-lite-apk-${{ github.run_number }}
          path: mine.lite.apk
          retention-days: 30
          
      # Upload AAB as GitHub Artifact
      - name: 📦 Upload AAB as GitHub Artifact
        if: success() && (github.event.inputs.build_type == 'aab' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '') && hashFiles('mine.lite.aab') != ''
        uses: actions/upload-artifact@v4
        with:
          name: mine-lite-aab-${{ github.run_number }}
          path: mine.lite.aab
          retention-days: 30
          

          
      # Create comprehensive build summary
      - name: 📝 Create build summary
        if: success()
        run: |
          echo "## 🚀 Android Build Completed ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # APK Summary
          if [ -f "mine.lite.apk" ]; then
            APK_SIZE=$(du -h mine.lite.apk | cut -f1)
            echo "### 📱 APK Build" >> $GITHUB_STEP_SUMMARY
            echo "- **File:** mine.lite.apk" >> $GITHUB_STEP_SUMMARY
            echo "- **Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
            echo "- **Profile:** preview" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # AAB Summary
          if [ -f "mine.lite.aab" ]; then
            AAB_SIZE=$(du -h mine.lite.aab | cut -f1)
            echo "### 📦 AAB Build (Google Play)" >> $GITHUB_STEP_SUMMARY
            echo "- **File:** mine.lite.aab" >> $GITHUB_STEP_SUMMARY
            echo "- **Size:** $AAB_SIZE" >> $GITHUB_STEP_SUMMARY
            echo "- **Profile:** production" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
